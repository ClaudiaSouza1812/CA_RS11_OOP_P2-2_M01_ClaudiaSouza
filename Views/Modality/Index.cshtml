@model IEnumerable<P02_2_ASP.NET_Core_MVC_M01_ClaudiaSouza.Models.Modality>
@using P02_2_ASP.NET_Core_MVC_M01_ClaudiaSouza.Enums


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ModalityId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModalityPackage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModalityName)
            </th>
            
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ModalityId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModalityPackage)
            </td>
            <td>
                @{
                    switch (item.ModalityPackage)
                    {
                        case EnumModalityPackage.OneModality:
                        case EnumModalityPackage.AllInclusive:
                            @item.ModalityName
                            break;
                        case EnumModalityPackage.TwoModalities:
                            var modalities = item.ModalityName.Split(',');
                            @modalities[0]
                            <br />
                            @(modalities.Length > 1 ? modalities[1] : "")
                            break;
                    }
                }
            </td>
            
            <td>
                <a asp-action="Edit" asp-route-id="@item.ModalityId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ModalityId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ModalityId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>